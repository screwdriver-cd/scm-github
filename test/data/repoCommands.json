{
    "name": "sd-checkout-code",
    "command": "export SD_GIT_WRAPPER=\"$(if [ `uname` = 'Darwin' ] || [ ${SD_HAB_ENABLED:-false} = 'false' ]; then echo 'eval'; else echo 'sd-step exec core/git'; fi)\" && if [ ! -z $SD_SCM_DEPLOY_KEY ]; then export SCM_CLONE_TYPE=ssh; fi && if [ ! -z $GIT_RECURSIVE_CLONE ] && [ $GIT_RECURSIVE_CLONE = false ]; then export GIT_RECURSIVE_OPTION=\"\"; else export GIT_RECURSIVE_OPTION=\"--recursive\"; fi && if [ ! -z \"$GIT_SPARSE_CHECKOUT_PATH\" ]; then export GIT_SPARSE_OPTION=\"--no-checkout\"; else export GIT_SPARSE_OPTION=\"\"; fi && echo Exporting environment variables && if [ ! -z $SCM_CLONE_TYPE ] && [ $SCM_CLONE_TYPE = ssh ]; then export SCM_URL=git@github.com:screwdriver-cd/guide; elif [ ! -z $SCM_USERNAME ] && [ ! -z $SCM_ACCESS_TOKEN ]; then export SCM_URL=https://$SCM_USERNAME:$SCM_ACCESS_TOKEN@github.com/screwdriver-cd/guide; else export SCM_URL=https://github.com/screwdriver-cd/guide; fi && export GIT_URL=$SCM_URL.git && export GIT_MERGE_AUTOEDIT=no && if [ ! -z $SD_SCM_DEPLOY_KEY ] && [ $SCM_CLONE_TYPE = ssh ]; then echo $SD_SCM_DEPLOY_KEY | base64 -d > /tmp/git_key && echo \"\" >> /tmp/git_key && chmod 600 /tmp/git_key && export GIT_SSH_COMMAND=\"ssh -i /tmp/git_key\" && mkdir -p ~/.ssh/ && printf \"%s\n\" \"CiAgICAgICAgSG9zdCBnaXRodWIuY29tCiAgICAgICAgICAgIFN0cmljdEhvc3RLZXlDaGVja2luZyBubwogICAgICAgIA==\" | base64 -d >> ~/.ssh/config; fi && echo Setting user name and user email && if [ ! -z $SD_SKIP_REPOSITORY_CLONE ] && [ $SD_SKIP_REPOSITORY_CLONE = true ] && ! command -v git >/dev/null 2>&1; then echo 'Skipping git config'; else $SD_GIT_WRAPPER \"git config --global user.name sd-buildbot\"; $SD_GIT_WRAPPER \"git config --global user.email dev-null@screwdriver.cd\"; fi && export SD_CHECKOUT_DIR_FINAL=$SD_SOURCE_DIR && if [ ! -z $SD_CHECKOUT_DIR ]; then export SD_CHECKOUT_DIR_FINAL=$SD_CHECKOUT_DIR; fi && echo Checking out code using the repo manifest defined in git@github.com:org/repo.git/default.xml && $(if curl --version > /dev/null 2>&1; then echo 'eval'; else echo 'sd-step exec core/curl'; fi) \"curl -s https://storage.googleapis.com/git-repo-downloads/repo > /usr/local/bin/repo\" && chmod a+x /usr/local/bin/repo && $(if curl --version > /dev/null 2>&1; then echo 'eval'; else echo 'sd-step exec core/curl'; fi) \"curl -s https://api.github.com/repos/screwdriver-cd/sd-repo/releases/latest > sd-repo-releases.html\" && $(if grep --version > /dev/null 2>&1; then echo 'eval'; else echo 'sd-step exec core/grep'; fi) \"grep -E -o 'https://github.com/screwdriver-cd/sd-repo/releases/download/v[0-9.]*/sd-repo_linux_amd64' sd-repo-releases.html > sd-repo-latest\" && $(if curl --version > /dev/null 2>&1; then echo 'eval'; else echo 'sd-step exec core/curl'; fi) \"curl -Ls $(cat sd-repo-latest) > /usr/local/bin/sd-repo\" && chmod a+x /usr/local/bin/sd-repo && sd-repo -manifestUrl=git@github.com:org/repo.git/default.xml -sourceRepo=screwdriver-cd/guide && if [ $(cat sourcePath) != \".\" ]; then export SD_SOURCE_DIR=$SD_SOURCE_DIR/$(cat sourcePath); fi && cd $SD_SOURCE_DIR && export GIT_BRANCH='origin/branchName'"
}
